# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'studentlist.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
import addstudent
import studentinfo
import sqlite3
import adminmain

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(531, 385)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.student_list_groupbox = QtWidgets.QGroupBox(self.centralwidget)
        self.student_list_groupbox.setGeometry(QtCore.QRect(10, 10, 651, 311))
        self.student_list_groupbox.setObjectName("student_list_groupbox")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.student_list_groupbox)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(340, 90, 161, 141))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.update_student_button = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.update_student_button.setObjectName("update_student_button")
        #################
        self.update_student_button.hide()
        ######
        self.verticalLayout_2.addWidget(self.update_student_button)
        self.add_student_button = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.add_student_button.setObjectName("add_student_button")
        self.verticalLayout_2.addWidget(self.add_student_button)
        self.modify_student_button = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.modify_student_button.setObjectName("modify_student_button")
        self.verticalLayout_2.addWidget(self.modify_student_button)
        self.delete_student_button = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.delete_student_button.setObjectName("delete_student_button")
        self.verticalLayout_2.addWidget(self.delete_student_button)
        self.tableWidget = QtWidgets.QTableWidget(self.student_list_groupbox)
        self.tableWidget.setGeometry(QtCore.QRect(10, 30, 271, 261))
        self.tableWidget.setObjectName("tableWidget")
        ##################################################3
        self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget.setColumnCount(4)
        ########################################################################

      #  self.tableWidget.horizontalHeader().setVisible(False)
        self.tableWidget.setColumnHidden(0,True)
        ###########################################################################
        self.tableWidget.setRowCount(0)
       # item = QtWidgets.QTableWidgetItem()
        #self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(40, 330, 451, 41))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.save_students_button = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.save_students_button.setObjectName("save_students_button")
        self.horizontalLayout.addWidget(self.save_students_button)
        self.canel_students_button = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.canel_students_button.setObjectName("canel_students_button")
        self.horizontalLayout.addWidget(self.canel_students_button)
        MainWindow.setCentralWidget(self.centralwidget)

        try:
            con = sqlite3.connect("userlist.db")
            cur = con.cursor()
            query = "SELECT ID,USERNAME,NAME,SCORE FROM users WHERE TYPE='student' AND ID!=1 AND ID!=2 AND ID!=5"
            result = cur.execute(query)
            self.tableWidget.setRowCount(0)

            for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                    self.tableWidget.setItem(row_number, column_number,QtWidgets.QTableWidgetItem(str(data)))
            con.close

        except Exception:
            self.showMessageBox('Error',('Could not load the database'))

        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        ################################################################
        self.canel_students_button.clicked.connect(self.showadminMain)
        self.canel_students_button.clicked.connect(MainWindow.close)
        ################################################################
        self.add_student_button.clicked.connect(self.addStudent)
        self.add_student_button.clicked.connect(MainWindow.close)
        # self.update_student_button.clicked.connect(self.tableWidget.clear)
        # self.update_student_button.clicked.connect(self.loaddata)
        self.delete_student_button.clicked.connect(self.deletestudent)
        self.modify_student_button.clicked.connect(self.modifystudent)
        self.modify_student_button.clicked.connect(MainWindow.close)
        self.save_students_button.clicked.connect(self.showadminMain)
        self.save_students_button.clicked.connect(MainWindow.close)

        self.retranslateUi(MainWindow)

        ################################################################

    # def loaddata(self):
    #     try:
    #         con = sqlite3.connect("userlist.db")
    #         cur = con.cursor()
    #         query = "SELECT ID,USERNAME,NAME FROM users WHERE TYPE='student' AND ID!=1 AND ID!=2"
    #         result = cur.execute(query)
    #         self.tableWidget.setRowCount(0)

    #         for row_number, row_data in enumerate(result):
    #             self.tableWidget.insertRow(row_number)
    #             for column_number, data in enumerate(row_data):
    #                 self.tableWidget.setItem(row_number, column_number,QtWidgets.QTableWidgetItem(str(data)))

    #         con.close
    #     except Exception:
    #         self.showMessageBox('Error',('Could not load the database'))

    def addStudent(self):
        self.addstudentWindow = QtWidgets.QMainWindow()
        self.ui = addstudent.Ui_MainWindow()
        self.ui.setupUi(self.addstudentWindow)
        self.addstudentWindow.show()
    
    def deletestudent(self):
        if self.tableWidget.selectionModel().hasSelection():
            row = self.tableWidget.currentRow()
            student_id=(self.tableWidget.item(row,0).text())
            print(student_id)
        try:
            con = sqlite3.connect("userlist.db")
            cur = con.cursor()
            cur.execute("DELETE from users WHERE ID = ?",(student_id,))
            print(student_id)
            self.tableWidget.removeRow(row)
            con.commit()
            con.close()
            self.showMessageBox('Successful','Deleted From Table Successful')
        except Exception:
            self.showMessageBox('Error', 'Could not Delete student from the database.')
    
    def modifystudent(self):
        if self.tableWidget.selectionModel().hasSelection():
            row = self.tableWidget.currentRow()
            student_id=(self.tableWidget.item(row,0).text())
            print(student_id) 

        try:
            con = sqlite3.connect("userlist.db")
            cur = con.cursor()   
            cur.execute("SELECT * FROM USERS WHERE ID=?",(student_id,))
            #cur.execute("SELECT MODIFY FROM questionbank WHERE ID = 1",(score,))
            data = cur.fetchall()
            con.commit()
            for row in data:
                usertype = row[1]
                name = row[2]
                username = row[3]
                password = row[4]
                #score = 
            cur.execute('UPDATE users SET TYPE=?,NAME=?,USERNAME=?,PASSWORD=?,MODIFY=? WHERE ID=2',(usertype,name,username,password,student_id,))
            con.commit()
            con.close()

        except Exception:
            self.showMessageBox('Error', 'Could not load the database.')    

        self.modifystudentWindow = QtWidgets.QMainWindow()
        self.ui = studentinfo.Ui_MainWindow()
        self.ui.setupUi(self.modifystudentWindow)
        self.modifystudentWindow.show()

    def showMessageBox(self,title,message):
        msgBox = QtWidgets.QMessageBox()
        msgBox.setIcon(QtWidgets.QMessageBox.Warning)
        msgBox.setWindowTitle(title)
        msgBox.setText(message)
        msgBox.setStandardButtons(QtWidgets.QMessageBox.Ok)
        msgBox.exec_()
    
    def showadminMain(self):
        self.adminmainWindow = QtWidgets.QMainWindow()
        self.ui = adminmain.Ui_admin_main()
        self.ui.setupUi(self.adminmainWindow)
        self.adminmainWindow.show()
    
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Student List"))
        self.student_list_groupbox.setTitle(_translate("MainWindow", "Student List"))
        self.update_student_button.setText(_translate("MainWindow", "Update"))
        self.add_student_button.setText(_translate("MainWindow", "Add"))
        self.modify_student_button.setText(_translate("MainWindow", "Modify"))
        self.delete_student_button.setText(_translate("MainWindow", "Delete"))
        #item = self.tableWidget.horizontalHeaderItem(0)
        #item.setText(_translate("MainWindow", "ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "USERNAME"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "NAME"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "SCORE"))
        self.save_students_button.setText(_translate("MainWindow", "Save"))
        self.canel_students_button.setText(_translate("MainWindow", "Cancel"))


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    studentlistpage = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(studentlistpage)
    studentlistpage.show()
    sys.exit(app.exec_())